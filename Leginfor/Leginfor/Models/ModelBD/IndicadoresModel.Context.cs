//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Leginfor.Models.ModelBD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class indicadoresEntities : DbContext
    {
        public indicadoresEntities()
            : base("name=indicadoresEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<cal_t_art_167> cal_t_art_167 { get; set; }
        public virtual DbSet<cal_t_imss> cal_t_imss { get; set; }
        public virtual DbSet<cal_t_isr> cal_t_isr { get; set; }
        public virtual DbSet<cal_t_isr_fecha> cal_t_isr_fecha { get; set; }
        public virtual DbSet<cal_t_isr_new> cal_t_isr_new { get; set; }
        public virtual DbSet<cal_t_isr_subsidio> cal_t_isr_subsidio { get; set; }
        public virtual DbSet<cal_t_limite> cal_t_limite { get; set; }
        public virtual DbSet<cal_t_periodo> cal_t_periodo { get; set; }
        public virtual DbSet<cal_t_tipo> cal_t_tipo { get; set; }
        public virtual DbSet<cal_t_topes> cal_t_topes { get; set; }
        public virtual DbSet<CALCULADORA_CAT_INPC> CALCULADORA_CAT_INPC { get; set; }
        public virtual DbSet<CALCULADORA_CAT_MES> CALCULADORA_CAT_MES { get; set; }
        public virtual DbSet<Indicador> Indicador { get; set; }
        public virtual DbSet<Periodo> Periodo { get; set; }
        public virtual DbSet<Valor> Valor { get; set; }
        public virtual DbSet<Equivalencias> Equivalencias { get; set; }
        public virtual DbSet<Equivalencias_moneda> Equivalencias_moneda { get; set; }
        public virtual DbSet<t_moneda> t_moneda { get; set; }
        public virtual DbSet<t_paridades_test> t_paridades_test { get; set; }
        public virtual DbSet<cnsIndicador> cnsIndicador { get; set; }
    
        public virtual ObjectResult<CALCULADORAS_GET_ACTUALIZACIONES_RECARGOS_Result> CALCULADORAS_GET_ACTUALIZACIONES_RECARGOS(Nullable<int> mES_ANTERIOR, Nullable<int> aNIO_ANTERIOR, Nullable<int> dIA_ACTUAL, Nullable<int> mES_ACTUAL, Nullable<int> aNIO_ACTUAL, Nullable<double> iMPUESTO)
        {
            var mES_ANTERIORParameter = mES_ANTERIOR.HasValue ?
                new ObjectParameter("MES_ANTERIOR", mES_ANTERIOR) :
                new ObjectParameter("MES_ANTERIOR", typeof(int));
    
            var aNIO_ANTERIORParameter = aNIO_ANTERIOR.HasValue ?
                new ObjectParameter("ANIO_ANTERIOR", aNIO_ANTERIOR) :
                new ObjectParameter("ANIO_ANTERIOR", typeof(int));
    
            var dIA_ACTUALParameter = dIA_ACTUAL.HasValue ?
                new ObjectParameter("DIA_ACTUAL", dIA_ACTUAL) :
                new ObjectParameter("DIA_ACTUAL", typeof(int));
    
            var mES_ACTUALParameter = mES_ACTUAL.HasValue ?
                new ObjectParameter("MES_ACTUAL", mES_ACTUAL) :
                new ObjectParameter("MES_ACTUAL", typeof(int));
    
            var aNIO_ACTUALParameter = aNIO_ACTUAL.HasValue ?
                new ObjectParameter("ANIO_ACTUAL", aNIO_ACTUAL) :
                new ObjectParameter("ANIO_ACTUAL", typeof(int));
    
            var iMPUESTOParameter = iMPUESTO.HasValue ?
                new ObjectParameter("IMPUESTO", iMPUESTO) :
                new ObjectParameter("IMPUESTO", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CALCULADORAS_GET_ACTUALIZACIONES_RECARGOS_Result>("CALCULADORAS_GET_ACTUALIZACIONES_RECARGOS", mES_ANTERIORParameter, aNIO_ANTERIORParameter, dIA_ACTUALParameter, mES_ACTUALParameter, aNIO_ACTUALParameter, iMPUESTOParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_importarparidades_test()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_importarparidades_test");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<SpParidad_det_Result> SpParidad_det(string m1, string m2, Nullable<decimal> monto, string fecha)
        {
            var m1Parameter = m1 != null ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(string));
    
            var m2Parameter = m2 != null ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SpParidad_det_Result>("SpParidad_det", m1Parameter, m2Parameter, montoParameter, fechaParameter);
        }
    
        public virtual int SpParidades(string m1, string m2, Nullable<decimal> monto, string fecha)
        {
            var m1Parameter = m1 != null ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(string));
    
            var m2Parameter = m2 != null ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpParidades", m1Parameter, m2Parameter, montoParameter, fechaParameter);
        }
    
        public virtual int SpParidades_Equivalencias(string m1, string m2, Nullable<decimal> monto, string fecha, Nullable<decimal> eqva)
        {
            var m1Parameter = m1 != null ?
                new ObjectParameter("M1", m1) :
                new ObjectParameter("M1", typeof(string));
    
            var m2Parameter = m2 != null ?
                new ObjectParameter("M2", m2) :
                new ObjectParameter("M2", typeof(string));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            var fechaParameter = fecha != null ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(string));
    
            var eqvaParameter = eqva.HasValue ?
                new ObjectParameter("eqva", eqva) :
                new ObjectParameter("eqva", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpParidades_Equivalencias", m1Parameter, m2Parameter, montoParameter, fechaParameter, eqvaParameter);
        }
    
        public virtual ObjectResult<sps_calculadora_aguinaldo_Result> sps_calculadora_aguinaldo(Nullable<decimal> cuotaDiaria, Nullable<System.DateTime> fechaIngreso, Nullable<int> diasAguinaldo, Nullable<int> diasExension, string zONA)
        {
            var cuotaDiariaParameter = cuotaDiaria.HasValue ?
                new ObjectParameter("CuotaDiaria", cuotaDiaria) :
                new ObjectParameter("CuotaDiaria", typeof(decimal));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var diasAguinaldoParameter = diasAguinaldo.HasValue ?
                new ObjectParameter("DiasAguinaldo", diasAguinaldo) :
                new ObjectParameter("DiasAguinaldo", typeof(int));
    
            var diasExensionParameter = diasExension.HasValue ?
                new ObjectParameter("DiasExension", diasExension) :
                new ObjectParameter("DiasExension", typeof(int));
    
            var zONAParameter = zONA != null ?
                new ObjectParameter("ZONA", zONA) :
                new ObjectParameter("ZONA", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_calculadora_aguinaldo_Result>("sps_calculadora_aguinaldo", cuotaDiariaParameter, fechaIngresoParameter, diasAguinaldoParameter, diasExensionParameter, zONAParameter);
        }
    
        public virtual int sps_calculadora_finiquito(Nullable<decimal> salarioCuotaDiaria, string zona, Nullable<System.DateTime> fechaIngreso, Nullable<System.DateTime> fechaRenuncia, Nullable<int> diasVacacionesAnioRenuncia, Nullable<int> diasVacacionesPendientesPeriodosAnteriores, Nullable<int> diasPagarPrimaAntiguedad, Nullable<decimal> salariosDevengados, Nullable<decimal> otrosIngresosPendientes, Nullable<decimal> otrosIngresosExentosPendientes, Nullable<decimal> isrRetenido, Nullable<decimal> ingresosGravadosPagadosMismoMesLosCualesRetuvoIsr)
        {
            var salarioCuotaDiariaParameter = salarioCuotaDiaria.HasValue ?
                new ObjectParameter("SalarioCuotaDiaria", salarioCuotaDiaria) :
                new ObjectParameter("SalarioCuotaDiaria", typeof(decimal));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            var fechaRenunciaParameter = fechaRenuncia.HasValue ?
                new ObjectParameter("FechaRenuncia", fechaRenuncia) :
                new ObjectParameter("FechaRenuncia", typeof(System.DateTime));
    
            var diasVacacionesAnioRenunciaParameter = diasVacacionesAnioRenuncia.HasValue ?
                new ObjectParameter("DiasVacacionesAnioRenuncia", diasVacacionesAnioRenuncia) :
                new ObjectParameter("DiasVacacionesAnioRenuncia", typeof(int));
    
            var diasVacacionesPendientesPeriodosAnterioresParameter = diasVacacionesPendientesPeriodosAnteriores.HasValue ?
                new ObjectParameter("DiasVacacionesPendientesPeriodosAnteriores", diasVacacionesPendientesPeriodosAnteriores) :
                new ObjectParameter("DiasVacacionesPendientesPeriodosAnteriores", typeof(int));
    
            var diasPagarPrimaAntiguedadParameter = diasPagarPrimaAntiguedad.HasValue ?
                new ObjectParameter("DiasPagarPrimaAntiguedad", diasPagarPrimaAntiguedad) :
                new ObjectParameter("DiasPagarPrimaAntiguedad", typeof(int));
    
            var salariosDevengadosParameter = salariosDevengados.HasValue ?
                new ObjectParameter("SalariosDevengados", salariosDevengados) :
                new ObjectParameter("SalariosDevengados", typeof(decimal));
    
            var otrosIngresosPendientesParameter = otrosIngresosPendientes.HasValue ?
                new ObjectParameter("OtrosIngresosPendientes", otrosIngresosPendientes) :
                new ObjectParameter("OtrosIngresosPendientes", typeof(decimal));
    
            var otrosIngresosExentosPendientesParameter = otrosIngresosExentosPendientes.HasValue ?
                new ObjectParameter("OtrosIngresosExentosPendientes", otrosIngresosExentosPendientes) :
                new ObjectParameter("OtrosIngresosExentosPendientes", typeof(decimal));
    
            var isrRetenidoParameter = isrRetenido.HasValue ?
                new ObjectParameter("IsrRetenido", isrRetenido) :
                new ObjectParameter("IsrRetenido", typeof(decimal));
    
            var ingresosGravadosPagadosMismoMesLosCualesRetuvoIsrParameter = ingresosGravadosPagadosMismoMesLosCualesRetuvoIsr.HasValue ?
                new ObjectParameter("IngresosGravadosPagadosMismoMesLosCualesRetuvoIsr", ingresosGravadosPagadosMismoMesLosCualesRetuvoIsr) :
                new ObjectParameter("IngresosGravadosPagadosMismoMesLosCualesRetuvoIsr", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sps_calculadora_finiquito", salarioCuotaDiariaParameter, zonaParameter, fechaIngresoParameter, fechaRenunciaParameter, diasVacacionesAnioRenunciaParameter, diasVacacionesPendientesPeriodosAnterioresParameter, diasPagarPrimaAntiguedadParameter, salariosDevengadosParameter, otrosIngresosPendientesParameter, otrosIngresosExentosPendientesParameter, isrRetenidoParameter, ingresosGravadosPagadosMismoMesLosCualesRetuvoIsrParameter);
        }
    
        public virtual ObjectResult<sps_Equivalencias_Mes_Year_Result> sps_Equivalencias_Mes_Year(string apli_mes, string apli_Year)
        {
            var apli_mesParameter = apli_mes != null ?
                new ObjectParameter("apli_mes", apli_mes) :
                new ObjectParameter("apli_mes", typeof(string));
    
            var apli_YearParameter = apli_Year != null ?
                new ObjectParameter("apli_Year", apli_Year) :
                new ObjectParameter("apli_Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Equivalencias_Mes_Year_Result>("sps_Equivalencias_Mes_Year", apli_mesParameter, apli_YearParameter);
        }
    
        public virtual ObjectResult<sps_Indicador_Result> sps_Indicador()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Indicador_Result>("sps_Indicador");
        }
    
        public virtual ObjectResult<sps_Indicador_Tipo_Result> sps_Indicador_Tipo(Nullable<int> ind_Id)
        {
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Indicador_Tipo_Result>("sps_Indicador_Tipo", ind_IdParameter);
        }
    
        public virtual ObjectResult<sps_Indicador_Ultimos_Result> sps_Indicador_Ultimos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Indicador_Ultimos_Result>("sps_Indicador_Ultimos");
        }
    
        public virtual ObjectResult<sps_indicador_WS_Result> sps_indicador_WS(string val_fecha, Nullable<int> ind_Id)
        {
            var val_fechaParameter = val_fecha != null ?
                new ObjectParameter("val_fecha", val_fecha) :
                new ObjectParameter("val_fecha", typeof(string));
    
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_indicador_WS_Result>("sps_indicador_WS", val_fechaParameter, ind_IdParameter);
        }
    
        public virtual ObjectResult<sps_indicadores_Result> sps_indicadores(Nullable<int> tipo)
        {
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_indicadores_Result>("sps_indicadores", tipoParameter);
        }
    
        public virtual int sps_Scroll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sps_Scroll");
        }
    
        public virtual ObjectResult<sps_tt_Tabla_web_Result> sps_tt_Tabla_web(Nullable<int> año_Id, Nullable<int> tex_Id)
        {
            var año_IdParameter = año_Id.HasValue ?
                new ObjectParameter("año_Id", año_Id) :
                new ObjectParameter("año_Id", typeof(int));
    
            var tex_IdParameter = tex_Id.HasValue ?
                new ObjectParameter("Tex_Id", tex_Id) :
                new ObjectParameter("Tex_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_tt_Tabla_web_Result>("sps_tt_Tabla_web", año_IdParameter, tex_IdParameter);
        }
    
        public virtual ObjectResult<sps_tt_Tablas_web_Result> sps_tt_Tablas_web()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_tt_Tablas_web_Result>("sps_tt_Tablas_web");
        }
    
        public virtual ObjectResult<sps_Valor_Listado_Result> sps_Valor_Listado(Nullable<int> ind_Id, string per_Name)
        {
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            var per_NameParameter = per_Name != null ?
                new ObjectParameter("per_Name", per_Name) :
                new ObjectParameter("per_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Valor_Listado_Result>("sps_Valor_Listado", ind_IdParameter, per_NameParameter);
        }
    
        public virtual ObjectResult<sps_Valor_Listado_Ultimos_Result> sps_Valor_Listado_Ultimos(Nullable<int> ind_Id)
        {
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Valor_Listado_Ultimos_Result>("sps_Valor_Listado_Ultimos", ind_IdParameter);
        }
    
        public virtual ObjectResult<sps_Valor_Years_Result> sps_Valor_Years(Nullable<int> ind_Id)
        {
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Valor_Years_Result>("sps_Valor_Years", ind_IdParameter);
        }
    
        public virtual ObjectResult<sps_Valores_Meses_Result> sps_Valores_Meses(Nullable<int> ind_Id, string año)
        {
            var ind_IdParameter = ind_Id.HasValue ?
                new ObjectParameter("ind_Id", ind_Id) :
                new ObjectParameter("ind_Id", typeof(int));
    
            var añoParameter = año != null ?
                new ObjectParameter("Año", año) :
                new ObjectParameter("Año", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sps_Valores_Meses_Result>("sps_Valores_Meses", ind_IdParameter, añoParameter);
        }
    }
}
